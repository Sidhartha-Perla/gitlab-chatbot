#### Infrastructure as Code
[IAC](https://en.wikipedia.org/wiki/Infrastructure_as_code) provides DevOps teams with a method to maintain consistency with the infrastructure their applications run on.
The best practices defined in IAC prevent configuration drift, and allow teams to maintain consistent performance and security characteristics without the need for ongoing manual intervention. 

IAC was made possible by the availability of rapidly deployed cloud infrastructure (IaaS platforms), and the corresponding buildup of tools to enable generic usage and consistent deployment to that infrastructure (Container Management Platforms).

With our roots as a source code management system, we will build on our existing workflows for code management, and [extend our ability to define and manage infrastructure configuration in your project repositories](/direction/delivery/infrastructure_as_code/) so you can achieve reliability and consistency in your application.

#### Policy as Code

Policy as Code is the idea that requirements for auditing and compliance teams can be collected with zero additional cognitive load from developers and other team members participating in software delivery. Because GitLab has an end-to-end view of the artifacts that are associated with releases (issues, merge requests, feature flags, and so on) we are uniquely positioned to provide a comprehensive view of compliance-related activity, collected on an ongoing basis throughout the build, test, and release process. Our vision here can be found in our [strategy page for Release Evidence](/direction/release/release_evidence/).
