### Runner Letter from the Editor

To the GitLab community, customers,

First, thank you for your ongoing support, contributions, and, yes, patience. Your engagement enables us to continue to expand the GitLab Runner supported platforms and compute architectures, which helps deliver our product vision of GitLab as the single DevOps platform.

As an introduction, I am [Darren Eastman](https://gitlab.com/DarrenEastman), the Runner Product Manager. We have had new exceptional individuals join the team; [Gina Doyle](https://gitlab.com/gdoyle), UX designer; [Romuald Atchad√©](https://gitlab.com/ratchade), back-end engineer; and [Miguel Rincon](https://gitlab.com/mrincon), front-end engineer. [Steve Azzopardi](https://gitlab.com/steveazz), a mainstay of the team and architect of many critical features, has transitioned to another team at GitLab. I would like again to thank Steve Azzopardi for his exceptional contributions and the rest of the Runner team, who have delivered excellent work this past year. There are also [two open backend engineering positions](https://boards.greenhouse.io/gitlab/jobs/5593352002) in Runner, so if you or someone you know would be interested, please apply! 

As we head into GitLab Fiscal Year 2023 (February 2022 to January 2023), we have many value-added features and capabilities that we hope to deliver across the GitLab Runner categories (Core, SaaS, Fleet.) For SaaS, that includes introducing a [new autoscaler for the Linux Runners with Docker Executor](https://gitlab.com/groups/gitlab-org/-/epics/6995) and transitioning the [Windows](https://gitlab.com/groups/gitlab-org/-/epics/2162) and [macOS](https://gitlab.com/groups/gitlab-org/-/epics/6105) Runners offerings to general availability. In Runner Core, we will balance investing in reducing the backlog of aged bugs and technical debt items with investing in new features. Finally, for Runner Fleet, we plan to accelerate the pace of innovation in bringing to market new features and capabilities to cost-effectively manage Runners at scale so that you can efficiently and reliably execute CI/CD workloads for your organization. That effort is currently decomposed across the following epics; [Runner Fleet: FY22 to FY23 Q2](https://gitlab.com/groups/gitlab-org/-/epics/4015), [Runner Fleet: FY23Q3 - FY23Q4](https://gitlab.com/groups/gitlab-org/-/epics/7182)

In January 2021 (FY22), I recorded a [video](https://youtu.be/yfk6x87No-Q) describing the Runner's vision and direction. The slides also included a view of the potential evolution of the market landscape for computing operating systems and architectures. Linux, macOS, and Windows were highlighted on that slide as anyone will, of course, expect those operating systems to continue to be widely used over the next five to ten years. The highlighted compute architectures were x86-64, AArch64, Apple MI. Since then, we have added support to the Runner for the IBM Power platform, ppc64le architecture. We are also planning on adding native support for z/OS on the IBM Z platform, s390X compute architecture. In short, the operating system and compute architecture landscape that we are using to manage our investments in Runner Core has expanded, and quicker than I had anticipated at the start of this year. Beyond the investments in supporting GitLab Runner on the major compute architectures, there were other critical features and capabilities that I had planned as themes for the roadmap. Well, what have we done so far?  For the GitLab Runner autoscaling on Kubernetes theme, we did, in fact launch the Runner Operator for Red Hat OpenShift. In addition, we were able to maintain a continued level of investment in the Kubernetes Executor. In looking at the numbers, this translates to approximately 30% of issues delivered for Runner Core. And these issues that we shipped for Kubernetes are proving to be extremely valuable to our community and customers. And there is more to come in the 14.6 release. While the Kubernetes executor story is good, we did not progress on a few other critical themes for Runner Core. First, we planned to start re-architecting the Runner API security mechanism. This is critical to support the continued adoption of GitLab CI, especially for organizations with stringent security and compliance requirements. Secondly, we did not make any meaningful progress on the Docker Machine autoscaling replacement for customers that self-manage Runners on virtual machines hosted on GCP, Azure, AWS and rely on the simplicity and effectiveness of this solution. We delayed work on these two efforts as we had to reallocate engineers to support work on GitLab SaaS scalability. The impact of the reallocation to support GitLab SaaS scalability also resulted in a stoppage of work on the necessary items required to transition the Windows and macOS SaaS Runners to GA. On the Runner Fleet front, thanks to the efforts of the small but dedicated team, we have started to make progress on foundational features. However, we certainly had a goal to be much further along in the evolution of this solution.

We have ambitious goals for the Runner Group in FY23. The complexity of the work that's planned cannot be understated. In Runner Core, we need to start re-architecting the API security mechanism. We also need to maintain our Docker Machine fork for autoscaling on public cloud VM's. In parallel, we will likely have to develop a new autoscaling solution. This is even though we offer autoscaling Runners via the Kubernetes Executor. However, customer feedback indicates that a VM-based autoscaling solution on public cloud providers is still highly desired. We plan to transition the Windows and macOS SaaS Runners to GA. In parallel, we will be working on re-architecting the Docker Machine autoscaler that currently powers the Linux SaaS Runners. This brings back the old metaphor of changing the tires while the truck is speeding down the highway at seventy miles per hour. Finally, we want to make meaningful progress on providing value-added features that simplify the management of a fleet of Runners.

While we have a fantastic team, we will need to increase the team size to keep pace with the demand of maintaining and improving the core runner product, not to mention delivering on the new features and capabilities for the Runner SaaS and Runner Fleet categories. In the [Verify: Support Runners as a service - Runner SaaS investment case](https://gitlab.com/gitlab-com/Product/-/issues/2367) we have asked for 8 headcount to deliver [a new autoscaler for the Linux SaaS Runners](https://gitlab.com/groups/gitlab-org/-/epics/6995), [Windows Runners GA](https://gitlab.com/groups/gitlab-org/-/epics/2162), and [macOS Runners GA](https://gitlab.com/groups/gitlab-org/-/epics/6105)). Without this additional investment, our delivery velocity will be extremely slow. This will translate into critical initiatives taking months to complete with delivery well into FY24.

Hopefully, this provides you with deeper insights into our thought process and challenges as we head into next year.

From the Runner Group - Have a great holiday season, Darren Eastman.
