### Letter from the Editor

Hello GitLab Community,

With 2022 behind us, I wanted to provide an overview of the plans for the Package stage in 2023.

There are a few direction items that I'm excited about.

The first is adding a [pipeline trigger for package registry events](https://gitlab.com/groups/gitlab-org/-/epics/9677) and [container registry events](https://gitlab.com/groups/gitlab-org/-/epics/9727). This is will help improve interoperability between the Package and Verify stages. It will also create the scaffolding for expanding [GitLab Workflows](https://gitlab.com/groups/gitlab-org/-/epics/8349) in general. It also helps to make GitLab more secure. How? Right now users don't have an automated way of kicking off pipelines when their package has been updated. This prevents them from doing things like vulnerability scans and compliance checks when a new version has been pushed to their registry. This functionality will also unblock (from the Package Registry side) the Secure team from adding [real-time or continuous scanning](https://gitlab.com/groups/gitlab-org/-/epics/2340), a highly requested feature.

The second is building an [importer tool](https://gitlab.com/groups/gitlab-org/-/epics/8730) to help customers import packages from JFrog's Artifactory to GitLab. Why is this important? Right now if customers want to migrate from Artifactory to GitLab they have to script everything themselves. The import tool will leverage `.yml` to map and migrate all of their packages. 

It's also worth mentioning that in FY24 we will only focus on our GA (generally available) package manager formats. Why? Because npm, Maven, PyPI, NuGet, and generic packages make up 80% of the package registry user base. In 2023, I want those 5 formats to be the best in class. To do so, we need to work through several issues for each format that will significantly improve the user experience and usability of the Package Registry.

For the Container Registry, I'm most excited about starting to rollout the [next-generation container registry for self-managed](https://gitlab.com/groups/gitlab-org/-/epics/5521) customers. The next-generation container registry supports online garbage collection which can help our larger customers save hundreds of thousands of dollars in storage costs. It also includes significant performance improvements and lots of new, planned functionality that self-managed customers will need to upgrade for. This is expected to be a challenging project due to the complexity of self-managed installs and the number of unknowns. We plan to offer a [beta program](https://gitlab.com/gitlab-org/gitlab/-/issues/379240) to help identify bugs/issues prior to making it generally available to customers.

We have a major [update of the UI](https://gitlab.com/groups/gitlab-org/-/epics/3211) planned for FY24. The most impactful improvement will be [improving sorting, searching, and filtering](https://gitlab.com/groups/gitlab-org/-/epics/8507) which gets brought up on every customer/user call.

One other improvement that's worth highlighting. Right now users can publish Helm charts and other types of OCI formatted files. The problem is that it's not possible to distinguish between container images and helm charts (or other files) The issue [GitLab-#38047](https://gitlab.com/gitlab-org/gitlab/-/issues/38047 will make it possible to distinguish between Helm charts and container images. But more importantly, it allows us to take a meaningful step forward on a [unified artifact repository](https://gitlab.com/groups/gitlab-org/-/epics/7056#benefits) which has potential for the stage on the 5-year time horizon.

What's not being prioritized?

- Moving [alpha/beta](https://docs.gitlab.com/ee/user/packages/package_registry/supported_package_managers.html) formats to GA
- Support for [new package manager formats](https://gitlab.com/groups/gitlab-org/-/epics/1245)
- [Virtual registries](https://gitlab.com/groups/gitlab-org/-/epics/2920)
- [Dependency Firewall](https://gitlab.com/groups/gitlab-org/-/epics/5133)

Please consider watching this 8-minute overview of [GitLab Package's 2023 plans](https://youtu.be/O-4kMmQBb34).

Thanks!
Tim